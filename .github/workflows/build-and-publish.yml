name: Build and publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

env:
  DOCKER_REGISTRY: docker.io
  GITHUB_REGISTRY: ghcr.io

  IMAGE_NAME: volatility2

jobs:
  build-and-publish:
    if: github.event_name == 'repository_dispatch' && github.event.action == 'alpine-base-image-update'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Log in to Github registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRYGITHUB_TOKEN }}

      - name: Parse Alpine tags from event
        id: parse-tags
        run: |
          ALPINE_TAGS='${{ github.event.client_payload.alpine_tag }}'
          echo "selected_tag=$SELECTED_TAG" | tee -a $GITHUB_OUTPUT

      - name: Update version
        run: |
          sed -i 's/ARG ALPINE_VERSION="[0-9]*"$/ARG ALPINE_VERSION=${{ steps.parse-tags.outputs.selected_tag }}/g' Dockerfile

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_REGISTRY }}/${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
            ${{ env.GITHUB_REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=v${{ steps.parse-tags.outputs.selected_tag }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ steps.parse-tags.outputs.selected_tag }}
            type=semver,pattern={{major}},value=v${{ steps.parse-tags.outputs.selected_tag }}
            type=sha
            type=raw,value=latest
      
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}